/*

AUTHOR:          F. Dimas Pena Romera
START DATE:      24/06/15
	
PURPOSE: Collect number of annual forecasts from IBES. Earnings Suprises. Download IBES files for US forecasts and actuals (both detail and summary) plus the linking file. 
Compute consesus surprise (using median forecast prior to announcement) and surprise using last forecast available 
prior to announcement. Merge surpises to link file to get permnos. Output surprise file in dimmod.filename. 
  

INPUT: 
	1. location of raw ibes data and linkfile after rawibes. 
	2. location of destination merged file after dimmod. 

OUTPUT: 
	1. dimmod.filename = surprise file. 
*/



*include macros;
%include 'C:\Users\penarome\Desktop\Academic\UNCPP2HL\Scripts\macros.sas';
%include 'C:\ado\plus\s\stata_wrapper.sas'

*I define my local permanent libraries in which I will modify and update outputs.;
libname dimmod 'C:\Users\penarome\Desktop\Academic\UNCFDimSummer\modified' ;
libname fig 'C:\Users\penarome\Desktop\Academic\UNCFDimSummer\FDimasWriting';

*I define libraries in which to locate and extract rawdata. all these directories will be deleted at the end of the project;

libname rawcomp 'C:\Users\penarome\Desktop\Academic\RAW DATABASES\RCompustat_2015' ;
libname rawibes 'C:\Users\penarome\Desktop\Academic\RAW DATABASES\RIbes_2015' ;
/*
*-------------- DOWNLOAD required files from wrds and store them in rawibes; 
*/
*keep forecasts for earnings per share and only annual forecasts (Note that annual forecasts are FPI==1 versus quarterly forecasts with FPI==6 or others);


data _sum;
set rawibes.NSTATSUM_EPSUS;
if measure="EPS" and fpi in ("1") and fiscalp=("ANN");
run;

*link permno to tickers in surprise file duplicates generated;
proc sql;
create table _sum as select a.*, b.permno from _sum a left join rawibes.iclinc b
on a.ticker=b.ticker
where (b.score le 4) and b.permno ne .;
quit;

PROC SORT DATA=_sum nodupkey;
BY permno statpers;
RUN;


*link to facility file by permno;
proc sql;
create table _sum as select a.*, b.permno, b.dealactivedate, b.fdatadate from _sum a left join dimmod.facilities b
on a.permno=b.permno
where b.dealactivedate - 364 < a.STATPERS < b.dealactivedate 
    and b.fdatadate -5 <= a.FPEDATS <= b.fdatadate +5;
quit;


PROC SORT DATA=_sum;
BY permno dealactivedate STATPERS;
RUN;

*SUR has the earnings surprises for each firm;
data _sum2;
set _sum;
by permno dealactivedate;
if last.dealactivedate;
run;


data _sum2;
	set _sum2;
	keep permno dealactivedate numest;
run;



proc sql;
create table dimmod.Facilities as select a.*, b.numest from dimmod.Facilities a left join _sum2 b
on a.permno=b.permno
and a.dealactivedate=b.dealactivedate;
quit;


/*


*get in stock price, which will be used as deflator below,
ticker is the unique firm identifier, STATPERS is the time when the consensus forecasts are calcualted;
proc sql;
create table _sum as select a.*, b.PRICE, b.SHOUT from _sum a left join rawibes.Nactpsum_epsUS b
on a.ticker=b.ticker and a.STATPERS=b.STATPERS;
quit;

*CALCULATE EARNINGS SURPRISE / FORECAST ERROR. 
THERE ARE MANY FORECASTS FOR EACH FISCAL YEAR, I WILL TAKE THE LAST FORECAST AS THE BASIS FOR CALCULATING EARNINGS SURPRISE;
*actual is actual earnings;
*MEDEST is the median of all the forecastes avaiable, which is the consensus forecasts, some researchers may use mean, but it shouldn't matter;
data _sum;
set _sum;
if price gt 0 then SUR=(actual-MEDEST)/price;
run;

/*PICK THE LAST FORECAST HERE, BUT BEFORE EARNINGS ANNOUNCEMENT;
	*step 1 deletes cases where actual announcement date exists and statpers exists, but announcement date is  is before 
	the statper date (suspicious observations);
data _sum;
set _sum;
if (ANNDATS_ACT ne .) and (STATPERS ne .) and (ANNDATS_ACT le STATPERS) THEN delete; 
run;
*/
	*step 2 assumes that If ANNDATS_ACT is missing, then I assume that the last forecast for each TICKER-FPEDATS group
	is made before the earnings announcement date, which is generally the case;
	/*
PROC SORT DATA=_sum;
BY TICKER FPEDATS STATPERS;
RUN;
*SUR has the earnings surprises for each firm;
data _sum;
set _sum;
by TICKER FPEDATS;
if last.FPEDATS;
run;
*FPEDATS IS ESSENTIALLY THE DATADATE VARIABLE IN COMPUSTAT;
data sum;
set sum;
if sur eq . then delete;
run;




data dimmod.sum;
set sum;
run;